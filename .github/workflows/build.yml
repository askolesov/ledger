name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p build
        if [ "$GOOS" = "windows" ]; then
          go build -o build/ledger-${{ matrix.goos }}-${{ matrix.goarch }}.exe -v ./cmd/ledger
        else
          go build -o build/ledger-${{ matrix.goos }}-${{ matrix.goarch }} -v ./cmd/ledger
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ledger-${{ matrix.goos }}-${{ matrix.goarch }}
        path: build/ledger-*

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: ledger:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
